// <auto-generated />
using System;
using BeautySalonDataBaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeautySalonDataBaseImplement.Migrations
{
    [DbContext(typeof(BeautySalonDatabase))]
    partial class BeautySalonDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FIOClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Cosmetic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cosmetics");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.CosmeticsInOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CosmeticId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CosmeticId");

                    b.HasIndex("OrderId");

                    b.ToTable("CosmeticsInOrders");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FIOEmployee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<string>("Services")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcedureId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Estimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estimates");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.LaborCosts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CosmeticId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FIOEmployee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LeadTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CosmeticId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ServiceId");

                    b.ToTable("LaborCosts");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("FIOClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProcedureCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.ProcedureMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EstimateId")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcedureId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstimateId");

                    b.HasIndex("ProcedureId1");

                    b.ToTable("ProcedureMarks");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.ResponsibleEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<int>("LaborCostsId")
                        .HasColumnType("int");

                    b.Property<int>("Services")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("ResponsibleEmployees");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CosmeticId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FIOEmployee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LaborCosts")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CosmeticId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.ServicesInOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServicesInOrders");
                });

            modelBuilder.Entity("EstimateProcedure", b =>
                {
                    b.Property<int>("EstimateId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.HasKey("EstimateId", "ProcedureId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("EstimateProcedure");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.CosmeticsInOrder", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Cosmetic", "Cosmetic")
                        .WithMany()
                        .HasForeignKey("CosmeticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalonDataBaseImplement.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cosmetic");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Employee", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Procedure", null)
                        .WithMany("Employees")
                        .HasForeignKey("ProcedureId");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.LaborCosts", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Cosmetic", null)
                        .WithMany("LaborCosts")
                        .HasForeignKey("CosmeticId");

                    b.HasOne("BeautySalonDataBaseImplement.Models.Employee", "Employee")
                        .WithMany("LaborCosts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalonDataBaseImplement.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Order", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Client", null)
                        .WithMany("Orders")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Procedure", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Client", null)
                        .WithMany("Procedures")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.ProcedureMarks", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Estimate", "Estimate")
                        .WithMany()
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalonDataBaseImplement.Models.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("ProcedureId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimate");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.ResponsibleEmployee", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.LaborCosts", "LaborCosts")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalonDataBaseImplement.Models.Employee", "Employee")
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("EmployeeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LaborCosts");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Service", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Cosmetic", null)
                        .WithMany("Services")
                        .HasForeignKey("CosmeticId");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.ServicesInOrder", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Order", "Order")
                        .WithMany("CosmeticsInOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalonDataBaseImplement.Models.Service", "Service")
                        .WithMany("ServicesInOrder")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("EstimateProcedure", b =>
                {
                    b.HasOne("BeautySalonDataBaseImplement.Models.Estimate", null)
                        .WithMany()
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautySalonDataBaseImplement.Models.Procedure", null)
                        .WithMany()
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Client", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Cosmetic", b =>
                {
                    b.Navigation("LaborCosts");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Employee", b =>
                {
                    b.Navigation("LaborCosts");

                    b.Navigation("ResponsibleEmployees");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Order", b =>
                {
                    b.Navigation("CosmeticsInOrder");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Procedure", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BeautySalonDataBaseImplement.Models.Service", b =>
                {
                    b.Navigation("ServicesInOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
